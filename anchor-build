#!/usr/bin/env python
import sys
import json
import os
from distutils.dir_util import copy_tree
from shutil import rmtree
 
configFile = open("config.json")

config = json.load(configFile)

def createBuildDir():
    buildDir = os.getcwd() + "/build"
    if os.path.exists(buildDir):
        rmtree(buildDir)

    os.mkdir(buildDir)

def writeCss():
    css = """
    main > * {
        display: none;
    }

    main > *:last-child {
        display: block;
    }

    main > *:target {
        display: block;
    }

    main > *:target ~ * {
        display: none;
    }
    """
    cssFile = open("build/styles/anchor-spa.css", "w+")
    cssFile.write(css)
    cssFile.close()

def copyAssets():
    copy_tree("assets", "build/assets")
    copy_tree("scripts", "build/scripts")
    copy_tree("styles", "build/styles")

def writeHtml():
    def loadHtmlTemplate(filename):
        if filename != config['head'] and filename.split(".")[1] == 'template':
                file = open("templates/" + filename)

                result = """
                    <section class="spa-anchor" id="{id}">
                        {data}
                    </section>
                """.format(id=filename.split(".")[0], data=file.read())

                file.close()
                return result
        return ""

    headTemplate = open("templates/" + config['head'])
    head = headTemplate.read() + "\n<link rel=\"stylesheet\" href=\"styles/anchor-spa.css\">"
    headTemplate.close()

    body = ""

    for (_, _, filenames) in os.walk("templates"):
        for filename in filenames:
            if filename != config['head']:
                body += loadHtmlTemplate(filename)

    body += loadHtmlTemplate(config['main'])

    out = """
    <!DOCTYPE html>
    <html lang="{lang}">
        <head>
            {head}
        </head>
        <body>
            <main>
            {body}
            </main>
        </body>
    </html>
    """.format(lang=config["lang"], head=head, body=body)

    outFile = open("build/index.html", "w+")

    outFile.write(out)

    outFile.close()

createBuildDir()
copyAssets()
writeHtml()
writeCss()
configFile.close()

